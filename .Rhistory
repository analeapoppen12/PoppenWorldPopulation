Estimates <- read_excel("World_Population.xlsx", sheet = "ESTIMATES", skip = 16)
library(tidyverse)
library(rvest)
library(ggplot2)
library(readxl)
library(cowplot)
url <- "https://en.wikipedia.org/wiki/FIFA_World_Cup"
page <- read_html(url)
page %>%
html_nodes('table')
Attendance_World_Cup <-
page %>%
html_nodes('table') %>%
.[[4]] %>%
html_table(header=FALSE, fill=TRUE) %>%
slice(-1 * 1:2 )
World_Cup <- Attendance_World_Cup[, c("X1", "X2", "X4", "X5", "X6")]
World_Cup$X6 <- as.numeric(gsub(",", "", World_Cup$`X6`))
World_Cup$X4 <- as.numeric(gsub(",", "", World_Cup$`X4`))
World_Cup <- na.omit(World_Cup)
rows_to_remove <- c(23)
World_Cup <- slice(World_Cup, -rows_to_remove)
World_Cup <- World_Cup %>%
select('X1', 'X2', 'X4', 'X5', 'X6') %>%
magrittr::set_colnames( c('Year', 'Hosts', 'Total attendance', 'Matches', 'Averageattendance') )
World_Cup %>% as.tibble()
World_Cup$WorldCup <- paste(World_Cup$Hosts,World_Cup$Year)
World_Cup$WorldCup <- str_replace_all(World_Cup$WorldCup, " ", "")
World_Cup <- World_Cup %>%
select(-Hosts, -Year)
World_Cup <- World_Cup %>%
select(WorldCup, everything())
head(World_Cup)
str(World_Cup)
World_Cup <- World_Cup[order(World_Cup$Averageattendance, decreasing = TRUE),]
ggplot(World_Cup, aes(x = reorder(WorldCup, -Averageattendance), y = Averageattendance)) +
geom_col() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "World Cup Host and Year", y = "Average Attendance") +
ggtitle("Average Attendance at FIFA World Cups")
Estimates <- read_excel("World_Population.xlsx", sheet = "ESTIMATES", skip = 16)
WorldPopulation <- Estimates %>%
filter(str_detect(Type, "Country/Area")) %>%
select(`Region, subregion, country or area *`, matches("^\\d{4}$")) %>%
pivot_longer(cols = -`Region, subregion, country or area *`, names_to = "Year", values_to = "Population") %>%
filter(between(as.numeric(Year), 1950, 2020)) %>%
mutate(Year = as.numeric(Year))
WorldPopulation <- WorldPopulation %>%
rename(Country =`Region, subregion, country or area *`)
head(WorldPopulation)
countries_of_interest <- c("Brazil", "Mexico", "Italy")
ggplot(WorldPopulation %>% filter(Country %in% countries_of_interest),
aes(x = Year, y = Population, color = Country)) +
geom_point() +
labs(x = "Year", y = "Population", title = "Population Trends for Brazil, Mexico, and Italy") +
scale_color_manual(values = c("Brazil" = "blue", "Mexico" = "green", "Italy" = "red"))
countries_of_interest <- c("Brazil", "Mexico", "Italy")
ggplot(WorldPopulation %>% filter(Country %in% countries_of_interest),
aes(x = Year, y = Population, color = Country)) +
geom_point() +
labs(x = "Year", y = "Population", title = "Population Trends for Brazil, Mexico, and Italy") +
scale_color_manual(values = c("Brazil" = "blue", "Mexico" = "green", "Italy" = "red")) +
theme_minimal() +
theme(axis.text.y = element_text(angle = 0, hjust = 0.5, vjust = 0.5, size = 8))
CountryPopulation <- function(country_name, title = NULL) {
country_data <- WorldPopulation %>%
filter(Country == country_name)
plot <- ggplot(country_data, aes(x = Year, y = Population)) +
geom_point() +
labs(x = "Year", y = "Population", title = title) +
theme_minimal()
return(plot)
}
USA_plot <- CountryPopulation("United States of America", title = "United States of America")
Russia_plot <- CountryPopulation("Russian Federation", title = "Russian Federation")
China_plot <- CountryPopulation("China", title = "China")
UK_plot <- CountryPopulation("United Kingdom", title = "United Kingdom")
print(UK_plot)
combined_plot <- plot_grid(USA_plot, Russia_plot, China_plot, UK_plot, nrow = 2)
print(combined_plot)
source("~/.active-rstudio-document")
source("C:/Users/shann/Downloads/PoppenWorldPopulation/data-raw/WorldPopulation.R")
source("C:/Users/shann/Downloads/PoppenWorldPopulation/data-raw/WorldPopulation.R")
source("C:/Users/shann/Downloads/PoppenWorldPopulation/data-raw/WorldPopulation.R")
source("C:/Users/shann/Downloads/PoppenWorldPopulation/data-raw/WorldPopulation.R")
source("C:/Users/shann/Downloads/PoppenWorldPopulation/data-raw/WorldPopulation.R")
source("C:/Users/shann/Downloads/PoppenWorldPopulation/data-raw/WorldPopulation.R")
source("C:/Users/shann/Downloads/PoppenWorldPopulation/data-raw/WorldPopulation.R")
usethis::use_data(WorldPopulation)
View(World_Cup)
View(World_Cup)
View(WorldPopulation)
library(PoppenWorldPopulation)
install.packages("roxygen2")
library(PoppenWorldPopulation)
usethis::use_data(World_Cup)
library(PoppenWorldPopulation)
library(PoppenWorldPopulation)
usethis::use_testthat()
library(PoppenWorldPopulation)
library(PoppenWorldPopulation)
library(PoppenWorldPopulation)
library(PoppenWorldPopulation)
CountryPopulation(USA)
PoppenWorldPopulation::CountryPopulation(USA)
source("C:/Users/shann/Downloads/PoppenWorldPopulation/R/CountryPopulation.R")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages(c("brio", "bslib", "cpp11", "curl", "data.table", "dbplyr", "desc", "dplyr", "evaluate", "fansi", "haven", "htmltools", "jsonlite", "knitr", "lifecycle", "markdown", "mosaicData", "pkgbuild", "processx", "progress", "rlang", "sass", "scales", "stringi", "stringr", "testthat", "tinytex", "utf8", "vctrs", "vroom", "withr", "xfun", "xml2"))
install.packages(c("brio", "bslib", "cpp11", "curl", "data.table", "dbplyr", "desc", "dplyr", "evaluate", "fansi", "haven", "htmltools", "jsonlite", "knitr", "lifecycle", "markdown", "mosaicData", "pkgbuild", "processx", "progress", "rlang", "sass", "scales", "stringi", "stringr", "testthat", "tinytex", "utf8", "vctrs", "vroom", "withr", "xfun", "xml2"))
install.packages(c("brio", "bslib", "cpp11", "curl", "data.table", "dbplyr", "desc", "dplyr", "evaluate", "fansi", "haven", "htmltools", "jsonlite", "knitr", "lifecycle", "markdown", "mosaicData", "pkgbuild", "processx", "progress", "rlang", "sass", "scales", "stringi", "stringr", "testthat", "tinytex", "utf8", "vctrs", "vroom", "withr", "xfun", "xml2"))
install.packages(c("brio", "bslib", "cpp11", "curl", "data.table", "dbplyr", "desc", "dplyr", "evaluate", "fansi", "haven", "htmltools", "jsonlite", "knitr", "lifecycle", "markdown", "mosaicData", "pkgbuild", "processx", "progress", "rlang", "sass", "scales", "stringi", "stringr", "testthat", "tinytex", "utf8", "vctrs", "vroom", "withr", "xfun", "xml2"))
install.packages(c("brio", "bslib", "cpp11", "curl", "data.table", "dbplyr", "desc", "dplyr", "evaluate", "fansi", "haven", "htmltools", "jsonlite", "knitr", "lifecycle", "markdown", "mosaicData", "pkgbuild", "processx", "progress", "rlang", "sass", "scales", "stringi", "stringr", "testthat", "tinytex", "utf8", "vctrs", "vroom", "withr", "xfun", "xml2"))
install.packages(c("brio", "bslib", "cpp11", "curl", "data.table", "dbplyr", "desc", "dplyr", "evaluate", "fansi", "haven", "htmltools", "jsonlite", "knitr", "lifecycle", "markdown", "mosaicData", "pkgbuild", "processx", "progress", "rlang", "sass", "scales", "stringi", "stringr", "testthat", "tinytex", "utf8", "vctrs", "vroom", "withr", "xfun", "xml2"))
install.packages(c("brio", "bslib", "cpp11", "curl", "data.table", "dbplyr", "desc", "dplyr", "evaluate", "fansi", "haven", "htmltools", "jsonlite", "knitr", "lifecycle", "markdown", "mosaicData", "pkgbuild", "processx", "progress", "rlang", "sass", "scales", "stringi", "stringr", "testthat", "tinytex", "utf8", "vctrs", "vroom", "withr", "xfun", "xml2"))
install.packages(c("brio", "bslib", "cpp11", "curl", "data.table", "dbplyr", "desc", "dplyr", "evaluate", "fansi", "haven", "htmltools", "jsonlite", "knitr", "lifecycle", "markdown", "mosaicData", "pkgbuild", "processx", "progress", "rlang", "sass", "scales", "stringi", "stringr", "testthat", "tinytex", "utf8", "vctrs", "vroom", "withr", "xfun", "xml2"))
install.packages(c("brio", "bslib", "cpp11", "curl", "data.table", "dbplyr", "desc", "dplyr", "evaluate", "fansi", "haven", "htmltools", "jsonlite", "knitr", "lifecycle", "markdown", "mosaicData", "pkgbuild", "processx", "progress", "rlang", "sass", "scales", "stringi", "stringr", "testthat", "tinytex", "utf8", "vctrs", "vroom", "withr", "xfun", "xml2"))
PoppenWorldPopulation::CountryPopulation("USA")
library(PoppenWorldPopulation)
library(PoppenWorldPopulation)
library(tidyverse)
library(rvest)
library(ggplot2)
library(readxl)
library(cowplot)
url <- "https://en.wikipedia.org/wiki/FIFA_World_Cup"
page <- read_html(url)
page %>%
html_nodes('table')
Attendance_World_Cup <-
page %>%
html_nodes('table') %>%
.[[4]] %>%
html_table(header=FALSE, fill=TRUE) %>%
slice(-1 * 1:2 )
World_Cup <- Attendance_World_Cup[, c("X1", "X2", "X4", "X5", "X6")]
World_Cup$X6 <- as.numeric(gsub(",", "", World_Cup$`X6`))
World_Cup$X4 <- as.numeric(gsub(",", "", World_Cup$`X4`))
World_Cup <- na.omit(World_Cup)
rows_to_remove <- c(23)
World_Cup <- slice(World_Cup, -rows_to_remove)
World_Cup <- World_Cup %>%
select('X1', 'X2', 'X4', 'X5', 'X6') %>%
magrittr::set_colnames( c('Year', 'Hosts', 'Total attendance', 'Matches', 'Averageattendance') )
World_Cup %>% as.tibble()
World_Cup$WorldCup <- paste(World_Cup$Hosts,World_Cup$Year)
World_Cup$WorldCup <- str_replace_all(World_Cup$WorldCup, " ", "")
World_Cup <- World_Cup %>%
select(-Hosts, -Year)
World_Cup <- World_Cup %>%
select(WorldCup, everything())
head(World_Cup)
str(World_Cup)
World_Cup <- World_Cup[order(World_Cup$Averageattendance, decreasing = TRUE),]
ggplot(World_Cup, aes(x = reorder(WorldCup, -Averageattendance), y = Averageattendance)) +
geom_col() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "World Cup Host and Year", y = "Average Attendance") +
ggtitle("Average Attendance at FIFA World Cups")
Estimates <- read_excel("World_Population.xlsx", sheet = "ESTIMATES", skip = 16)
WorldPopulation <- Estimates %>%
filter(str_detect(Type, "Country/Area")) %>%
select(`Region, subregion, country or area *`, matches("^\\d{4}$")) %>%
pivot_longer(cols = -`Region, subregion, country or area *`, names_to = "Year", values_to = "Population") %>%
filter(between(as.numeric(Year), 1950, 2020)) %>%
mutate(Year = as.numeric(Year))
WorldPopulation <- WorldPopulation %>%
rename(Country =`Region, subregion, country or area *`)
head(WorldPopulation)
countries_of_interest <- c("Brazil", "Mexico", "Italy")
ggplot(WorldPopulation %>% filter(Country %in% countries_of_interest),
aes(x = Year, y = Population, color = Country)) +
geom_point() +
labs(x = "Year", y = "Population", title = "Population Trends for Brazil, Mexico, and Italy") +
scale_color_manual(values = c("Brazil" = "blue", "Mexico" = "green", "Italy" = "red"))
countries_of_interest <- c("Brazil", "Mexico", "Italy")
ggplot(WorldPopulation %>% filter(Country %in% countries_of_interest),
aes(x = Year, y = Population, color = Country)) +
geom_point() +
labs(x = "Year", y = "Population", title = "Population Trends for Brazil, Mexico, and Italy") +
scale_color_manual(values = c("Brazil" = "blue", "Mexico" = "green", "Italy" = "red")) +
theme_minimal() +
theme(axis.text.y = element_text(angle = 0, hjust = 0.5, vjust = 0.5, size = 8))
CountryPopulation <- function(country_name, title = NULL) {
country_data <- WorldPopulation %>%
filter(Country == country_name)
plot <- ggplot(country_data, aes(x = Year, y = Population)) +
geom_point() +
labs(x = "Year", y = "Population", title = title) +
theme_minimal()
return(plot)
}
USA_plot <- CountryPopulation("United States of America", title = "United States of America")
Russia_plot <- CountryPopulation("Russian Federation", title = "Russian Federation")
China_plot <- CountryPopulation("China", title = "China")
UK_plot <- CountryPopulation("United Kingdom", title = "United Kingdom")
print(UK_plot)
combined_plot <- plot_grid(USA_plot, Russia_plot, China_plot, UK_plot, nrow = 2)
print(combined_plot)
load("C:/Users/shann/Downloads/PoppenWorldPopulation/data/World_Cup.rda")
library(tidyverse)
library(rvest)
library(ggplot2)
library(readxl)
library(cowplot)
url <- "https://en.wikipedia.org/wiki/FIFA_World_Cup"
page <- read_html(url)
page %>%
html_nodes('table')
Attendance_World_Cup <-
page %>%
html_nodes('table') %>%
.[[4]] %>%
html_table(header=FALSE, fill=TRUE) %>%
slice(-1 * 1:2 )
World_Cup <- Attendance_World_Cup[, c("X1", "X2", "X4", "X5", "X6")]
World_Cup$X6 <- as.numeric(gsub(",", "", World_Cup$`X6`))
World_Cup$X4 <- as.numeric(gsub(",", "", World_Cup$`X4`))
World_Cup <- na.omit(World_Cup)
rows_to_remove <- c(23)
World_Cup <- slice(World_Cup, -rows_to_remove)
World_Cup <- World_Cup %>%
select('X1', 'X2', 'X4', 'X5', 'X6') %>%
magrittr::set_colnames( c('Year', 'Hosts', 'Total attendance', 'Matches', 'Averageattendance') )
World_Cup %>% as.tibble()
World_Cup$WorldCup <- paste(World_Cup$Hosts,World_Cup$Year)
World_Cup$WorldCup <- str_replace_all(World_Cup$WorldCup, " ", "")
World_Cup <- World_Cup %>%
select(-Hosts, -Year)
World_Cup <- World_Cup %>%
select(WorldCup, everything())
head(World_Cup)
str(World_Cup)
World_Cup <- World_Cup[order(World_Cup$Averageattendance, decreasing = TRUE),]
ggplot(World_Cup, aes(x = reorder(WorldCup, -Averageattendance), y = Averageattendance)) +
geom_col() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "World Cup Host and Year", y = "Average Attendance") +
ggtitle("Average Attendance at FIFA World Cups")
Estimates <- read_excel("World_Population.xlsx", sheet = "ESTIMATES", skip = 16)
WorldPopulation <- Estimates %>%
filter(str_detect(Type, "Country/Area")) %>%
select(`Region, subregion, country or area *`, matches("^\\d{4}$")) %>%
pivot_longer(cols = -`Region, subregion, country or area *`, names_to = "Year", values_to = "Population") %>%
filter(between(as.numeric(Year), 1950, 2020)) %>%
mutate(Year = as.numeric(Year))
WorldPopulation <- WorldPopulation %>%
rename(Country =`Region, subregion, country or area *`)
head(WorldPopulation)
countries_of_interest <- c("Brazil", "Mexico", "Italy")
ggplot(WorldPopulation %>% filter(Country %in% countries_of_interest),
aes(x = Year, y = Population, color = Country)) +
geom_point() +
labs(x = "Year", y = "Population", title = "Population Trends for Brazil, Mexico, and Italy") +
scale_color_manual(values = c("Brazil" = "blue", "Mexico" = "green", "Italy" = "red"))
countries_of_interest <- c("Brazil", "Mexico", "Italy")
ggplot(WorldPopulation %>% filter(Country %in% countries_of_interest),
aes(x = Year, y = Population, color = Country)) +
geom_point() +
labs(x = "Year", y = "Population", title = "Population Trends for Brazil, Mexico, and Italy") +
scale_color_manual(values = c("Brazil" = "blue", "Mexico" = "green", "Italy" = "red")) +
theme_minimal() +
theme(axis.text.y = element_text(angle = 0, hjust = 0.5, vjust = 0.5, size = 8))
CountryPopulation <- function(country_name, title = NULL) {
country_data <- WorldPopulation %>%
filter(Country == country_name)
plot <- ggplot(country_data, aes(x = Year, y = Population)) +
geom_point() +
labs(x = "Year", y = "Population", title = title) +
theme_minimal()
return(plot)
}
USA_plot <- CountryPopulation("United States of America", title = "United States of America")
Russia_plot <- CountryPopulation("Russian Federation", title = "Russian Federation")
China_plot <- CountryPopulation("China", title = "China")
UK_plot <- CountryPopulation("United Kingdom", title = "United Kingdom")
print(UK_plot)
combined_plot <- plot_grid(USA_plot, Russia_plot, China_plot, UK_plot, nrow = 2)
print(combined_plot)
